name: Autograding Tests
'on':
- push
- repository_dispatch
permissions:
  checks: write
  actions: read
  contents: read
jobs:
  run-autograding-tests:
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Student Info – List Output
      id: student-info-list-output
      uses: classroom-resources/autograding-io-grader@v1
      with:
        test-name: Student Info – List Output
        setup-command: ''
        command: python3 student_app/main.py
        input: ''
        expected-output: 'Name: Alice'
        comparison-method: contains
        timeout: 10
        max-score: 1
    - name: Student Info – Grade Output
      id: student-info-grade-output
      uses: classroom-resources/autograding-io-grader@v1
      with:
        test-name: Student Info – Grade Output
        setup-command: ''
        command: python3 student_app/main.py
        input: ''
        expected-output: 'Grade: 85'
        comparison-method: contains
        timeout: 10
        max-score: 1
    - name: Student Info – Pass Status
      id: student-info-pass-status
      uses: classroom-resources/autograding-io-grader@v1
      with:
        test-name: Student Info – Pass Status
        setup-command: ''
        command: python3 student_app/main.py
        input: ''
        expected-output: Student Info – Pass Status
        comparison-method: contains
        timeout: 10
        max-score: 1
    - name: Student Info – Fail Status
      id: student-info-fail-status
      uses: classroom-resources/autograding-io-grader@v1
      with:
        test-name: Student Info – Fail Status
        setup-command: ''
        command: python3 student_app/main.py
        input: ''
        expected-output: 'Status: Failed'
        comparison-method: contains
        timeout: 10
        max-score: 1
    - name: Student Info – Excellent Category
      id: student-info-excellent-category
      uses: classroom-resources/autograding-io-grader@v1
      with:
        test-name: Student Info – Excellent Category
        setup-command: ''
        command: python3 student_app/main.py
        input: ''
        expected-output: 'Level: Excellent'
        comparison-method: contains
        timeout: 10
        max-score: 1
    - name: Student Info – Good Category
      id: student-info-good-category
      uses: classroom-resources/autograding-io-grader@v1
      with:
        test-name: Student Info – Good Category
        setup-command: ''
        command: python3 student_app/main.py
        input: ''
        expected-output: 'Level: Good'
        comparison-method: contains
        timeout: 10
        max-score: 1
    - name: Student Info – Average Category
      id: student-info-average-category
      uses: classroom-resources/autograding-io-grader@v1
      with:
        test-name: Student Info – Average Category
        setup-command: ''
        command: python3 student_app/main.py
        input: ''
        expected-output: 'Level: Average'
        comparison-method: contains
        timeout: 10
        max-score: 1
    - name: Student Info – Poor Category
      id: student-info-poor-category
      uses: classroom-resources/autograding-io-grader@v1
      with:
        test-name: Student Info – Poor Category
        setup-command: ''
        command: python3 student_app/main.py
        input: ''
        expected-output: 'Level: Poor'
        comparison-method: contains
        timeout: 10
        max-score: 1
    - name: Student Info – Fail Level
      id: student-info-fail-level
      uses: classroom-resources/autograding-io-grader@v1
      with:
        test-name: Student Info – Fail Level
        setup-command: ''
        command: python3 student_app/main.py
        input: ''
        expected-output: 'Level: Fail'
        comparison-method: contains
        timeout: 10
        max-score: 1
    - name: 'Student Info – Count '
      id: student-info-count
      uses: classroom-resources/autograding-io-grader@v1
      with:
        test-name: 'Student Info – Count '
        setup-command: ''
        command: python3 student_app/main.py
        input: ''
        expected-output: 'Total Students: 5'
        comparison-method: contains
        timeout: 10
        max-score: 1
    - name: Autograding Reporter
      uses: classroom-resources/autograding-grading-reporter@v1
      env:
        STUDENT-INFO-LIST-OUTPUT_RESULTS: "${{steps.student-info-list-output.outputs.result}}"
        STUDENT-INFO-GRADE-OUTPUT_RESULTS: "${{steps.student-info-grade-output.outputs.result}}"
        STUDENT-INFO-PASS-STATUS_RESULTS: "${{steps.student-info-pass-status.outputs.result}}"
        STUDENT-INFO-FAIL-STATUS_RESULTS: "${{steps.student-info-fail-status.outputs.result}}"
        STUDENT-INFO-EXCELLENT-CATEGORY_RESULTS: "${{steps.student-info-excellent-category.outputs.result}}"
        STUDENT-INFO-GOOD-CATEGORY_RESULTS: "${{steps.student-info-good-category.outputs.result}}"
        STUDENT-INFO-AVERAGE-CATEGORY_RESULTS: "${{steps.student-info-average-category.outputs.result}}"
        STUDENT-INFO-POOR-CATEGORY_RESULTS: "${{steps.student-info-poor-category.outputs.result}}"
        STUDENT-INFO-FAIL-LEVEL_RESULTS: "${{steps.student-info-fail-level.outputs.result}}"
        STUDENT-INFO-COUNT_RESULTS: "${{steps.student-info-count.outputs.result}}"
      with:
        runners: student-info-list-output,student-info-grade-output,student-info-pass-status,student-info-fail-status,student-info-excellent-category,student-info-good-category,student-info-average-category,student-info-poor-category,student-info-fail-level,student-info-count
